"""
Django settings for studyhaven project.

Generated by 'django-admin startproject' using Django 3.2.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""

from pathlib import Path
import os
import dj_database_url

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-o-4ngup54ckmz2pqfmf7fiv5f3+321_grtab5rfav-29ws5sl$'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sites',
    'allauth',
    'allauth.account',  # handles normal logging/sign in
    'allauth.socialaccount',  # handles logging in via social media providers
    'crispy_forms',  # Django form styling
    'home',  # home app
    'products',  # products app
    'bag',  # shopping bag app
    'checkout',  # checkout app
    'profiles',  # user profile app
    'tutoring',  # tutoring app
    'faqs',  # faqs app
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'studyhaven.urls'

CRISPY_TEMPLATE_PACK = 'bootstrap4'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            BASE_DIR / 'templates',
            BASE_DIR / 'templates' / 'allauth',
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                # required by django-allauth to access HTTP request
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                # required to access media files using MEDIA_URL
                'django.template.context_processors.media',
                'bag.contexts.bag_contents'
            ],
            'builtins': [
                'crispy_forms.templatetags.crispy_forms_field',
                'crispy_forms.templatetags.crispy_forms_tags',
            ],
        },
    },
]

# Store messages in the site user's session
MESSAGE_STORAGE = 'django.contrib.messages.storage.session.SessionStorage'

# The following is obtained from the django-allauth documentation:
AUTHENTICATION_BACKENDS = [
    # Needed to login by username in Django admin, regardless of `allauth`
    'django.contrib.auth.backends.ModelBackend',

    # `allauth` specific authentication methods, such as login by e-mail
    'allauth.account.auth_backends.AuthenticationBackend',
]

""" Used by the allauth.socialaccount to create proper
callback URLs as users log in via social media """
SITE_ID = 1

""" Temporary log email confirmations to console """
EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'

# Email required to register on StudyHaven
ACCOUNT_EMAIL_REQUIRED = True
# User must confirm their email to be fully registered on StudyHaven
ACCOUNT_EMAIL_VERIFICATION = 'mandatory'
# Allows user to log in with either username or email
ACCOUNT_AUTHENTICATION_METHOD = 'username_email'
# To avoid typos in the email that the user provides
ACCOUNT_SIGNUP_EMAIL_ENTER_TWICE = True
# Minimum username length of 6 characters
ACCOUNT_USERNAME_MIN_LENGTH = 6
# The URL to access the login page
LOGIN_URL = '/accounts/login/'
# User is redirected to home page after successful login
LOGIN_REDIRECT_URL = '/'

WSGI_APPLICATION = 'studyhaven.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

STATIC_URL = '/static/'
STATICFILES_DIRS = (str(BASE_DIR.joinpath('static')),)

MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / 'media'

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Stripe
THRESHOLD_FOR_FREE_DELIVERY = 20
STANDARD_DELIVERY = 2.75
FIRST_CLASS_DELIVERY = 3.75
STRIPE_CURRENCY = 'gbp'
STRIPE_PUBLISHABLE_KEY = os.getenv('STRIPE_PUBLIC_KEY', '')
STRIPE_SECRET_KEY = os.getenv('STRIPE_SECRET_KEY', '')
STRIPE_WH_SECRET = os.getenv('STRIPE_WH_SECRET', '')
DEFAULT_EMAIL_SENDER = 'info@studyhaven.com'
